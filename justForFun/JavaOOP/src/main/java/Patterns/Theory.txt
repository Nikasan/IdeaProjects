Порождающие (Creational) These design patterns provide a way to create objects while hiding the creation logic,
беспокоятся о гибком создании объектов без внесения в программу лишних зависимостей.

-Фабричный метод -пример с драйвером или браузерами
-Синглтон - гарантирует, что у класса есть 1 экземпляр
-Билдер - создание объектов пошагово

Структурные паттерны показывают различные способы построения связей между объектами.

-Декоратор
позволяет динамически добавлять объектам новую функциональность, оборачивая их в полезные «обёртки».
Пример обертки над веб-элементами Button(WebElement)
-Фасад - простой интерфейс к сложной системе классов, библиотеке или фреймворку. Привер в пакете SOLID = S
-Прокси - подставлять вместо реальных объектов специальные объекты-заменители.
Эти объекты перехватывают вызовы к оригинальному объекту, позволяя сделать что-то до или после передачи вызова оригиналу.
нет примера(

Поведенческие паттерны определяют алгоритмы и способы взамодействия классов и объектов.  Эффективная коммуникация между объектами.

-Стратегия - если необходимо вынести логику из основного класса, Worker. Хороший пример проявления полиморфизма
-Итератор - вынесенесение в отдельный класс способа перебора коллекции